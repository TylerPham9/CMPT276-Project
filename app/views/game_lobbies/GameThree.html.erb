<% provide(:title, 'General Chat') %>
<h1>General Chat</h1>
<style>
#chat-output {
  height: 500px;
  overflow-y: scroll;
}
.list-group{
  height: 500px;
  overflow-y: scroll;
}

.full-spectrum .sp-palette {
max-width: 200px;
}

</style>
<div class="container-fluid">
  <div class="row">
    <div class="col-md-6">
      <div class="panel panel-default">
        <div class="panel-heading">Online Users</div>
        <div class="list-group" id="online-users"></div>
      </div>
    </div>
    <div class="col-md-6">
      <div class="panel panel-default">
        <div class="panel-heading">Live Chat</div>
  <ul class="list-group" id="chat-output"></ul>
  <div class="panel-body">
    <form id="chat">
      <div class="input-group">
        <input type="text" class="form-control" id="chat-input"/>
        <span class="input-group-btn">
          <button type="submit" class="btn btn-default">Send Message</button>
          <input type='text' id="full"/>
          
        </span>
      </div>
    </form>
  </div>
</div>

      </div>
    </div>
  </div>
<input id="color-log" type="hidden" value="#000000" />
<script type="text/javascript">

var $input = $('#chat-input'); 
var $output = $('#chat-output');
var channel = 'GENERAL CHAT';
var user = "<%= current_user.username%>";

var pubnub = PUBNUB.init({
	 publish_key: 'pub-c-39594782-c4b0-4fb3-80fe-74e262353bf6',
	 subscribe_key: 'sub-c-7ae61028-e9dd-11e3-92e7-02ee2ddab7fe',
	 uuid: user,
	 heartbeat: 10,
});

$("#full").spectrum({
    color: "#000000",
    showInput: true,
    className: "full-spectrum",
    showInitial: true,
    showPalette: true,
    showSelectionPalette: true,
    maxSelectionSize: 10,
    preferredFormat: "hex",
    localStorageKey: "spectrum.demo",
    move: function (color) {
        
    },
    show: function () {
    
    },
    beforeShow: function () {
    
    },
    hide: function () {
    
    },
    change: function(color) {
       $("#color-log").val(color.toHexString()); //setting hidden input to color to grab later
  document.getElementById("chat-input").setAttribute("style", "color:" + color.toHexString()); //setting input color
        
    },
    palette: [
        ["rgb(0, 0, 0)", "rgb(67, 67, 67)", "rgb(102, 102, 102)",
        "rgb(204, 204, 204)", "rgb(217, 217, 217)","rgb(255, 255, 255)"],
        ["rgb(152, 0, 0)", "rgb(255, 0, 0)", "rgb(255, 153, 0)", "rgb(255, 255, 0)", "rgb(0, 255, 0)",
        "rgb(0, 255, 255)", "rgb(74, 134, 232)", "rgb(0, 0, 255)", "rgb(153, 0, 255)", "rgb(255, 0, 255)"], 
        ["rgb(230, 184, 175)", "rgb(244, 204, 204)", "rgb(252, 229, 205)", "rgb(255, 242, 204)", "rgb(217, 234, 211)", 
        "rgb(208, 224, 227)", "rgb(201, 218, 248)", "rgb(207, 226, 243)", "rgb(217, 210, 233)", "rgb(234, 209, 220)", 
        "rgb(221, 126, 107)", "rgb(234, 153, 153)", "rgb(249, 203, 156)", "rgb(255, 229, 153)", "rgb(182, 215, 168)", 
        "rgb(162, 196, 201)", "rgb(164, 194, 244)", "rgb(159, 197, 232)", "rgb(180, 167, 214)", "rgb(213, 166, 189)", 
        "rgb(204, 65, 37)", "rgb(224, 102, 102)", "rgb(246, 178, 107)", "rgb(255, 217, 102)", "rgb(147, 196, 125)", 
        "rgb(118, 165, 175)", "rgb(109, 158, 235)", "rgb(111, 168, 220)", "rgb(142, 124, 195)", "rgb(194, 123, 160)",
        "rgb(166, 28, 0)", "rgb(204, 0, 0)", "rgb(230, 145, 56)", "rgb(241, 194, 50)", "rgb(106, 168, 79)",
        "rgb(69, 129, 142)", "rgb(60, 120, 216)", "rgb(61, 133, 198)", "rgb(103, 78, 167)", "rgb(166, 77, 121)",
        "rgb(91, 15, 0)", "rgb(102, 0, 0)", "rgb(120, 63, 4)", "rgb(127, 96, 0)", "rgb(39, 78, 19)", 
        "rgb(12, 52, 61)", "rgb(28, 69, 135)", "rgb(7, 55, 99)", "rgb(32, 18, 77)", "rgb(76, 17, 48)"]
    ]
});


$('#chat').submit(function() {
  pubnub.publish({
    channel: channel,
    message: {
      text: $input.val() + "|" + $('#color-log').val(), //must send code for color to be parsed by other client  (adding | at end of string eliminates color)
      username: user
    }
    
  });
  $input.val('');
  return false;
});

$('#log-out').on("click", function(){
  console.log('clicked log-out');
  pubnub.unsubscribe({
    channel: channel
  });
  
});

pubnub.subscribe({
  channel: channel, 
  message: function(data) { 
  
    var color = (data.text).split("|")[1];
    var userMessage = (data.text).split("|")[0];
    
    var $line = $('<li class="list-group-item"><strong>' + data.username + ': </strong> ');
    var $message = $('<span class="text" name="' + color + '">' + userMessage + '</span>');


    $line.append($message);
    $output.append($line);
   
    var array =  document.getElementsByName(color);
    array[array.length - 1].setAttribute("style", "color:" + color);
    $output.scrollTop($output[0].scrollHeight);
  },
  
  presence: function(data) {
    console.log(data);
    
    if(data.action == "join")
    {
       var $new_user = $('<li id="' + data.uuid + '"class="list-group-item">' + data.uuid + '</li>')
       $('#online-users').append($new_user);
    }
    
    if(data.action == "leave" || data.action == "timeout") 
    {
        $('#' + data.uuid).remove();
    }
  }
});
</script>
 
